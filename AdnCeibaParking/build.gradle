buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'

group = 'co.ceiba.AdnCeibaParking'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	jcenter()
}

jar{
	manifest {
		attributes  'Implementation-Title' : "AdnCeibaParking",
					"Implementation-Version" : version
	}

}


ext {
	springCloudVersion = 'Finchley.RC1'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('org.thymeleaf:thymeleaf-spring5:3.0.9.RELEASE')
	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')

	
}

test {
	jacoco {
		//toolVersion= '0.8.1'
		append = false
		//html.enabled = true
		//xml.enabled = true
		destinationFile = file("jacoco/jacocoTest.exec")
	}
	reports.junitXml.destination =  file("jacoco/test-results")
	testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}

jacocoTestReport.dependsOn(test)

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
